{"version":3,"sources":["images/earth-logo.png","images/mount-everest.jpg","components/Mountains.js","App.js","reportWebVitals.js","index.js"],"names":["Mountains","useState","linkClicked","setLinkClicked","isMobile","useMediaQuery","query","handleSwipe","to","scroller","scrollTo","spy","smooth","duration","handleClick","name","dot1","marginTop","backgroundColor","dot2","dot3","link1","color","link2","link3","styleLink","className","style","onClick","activeClass","onSwipeDown","console","log","onSwipeUp","page","animation","batch","Fade","MoveOut","background","App","getStyleDot","getStyleLink1","dotName","colorPage1","transition","borderBottom","colorPage2","colorPage3","basename","process","exact","path","src","EarthLogo","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85fbdccb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth-logo.510f9608.png\";","export default __webpack_public_path__ + \"static/media/mount-everest.a1fc0a8f.jpg\";","import React, { useState } from 'react';\r\nimport { Link, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\r\nimport { Animator, ScrollContainer, ScrollPage, batch, Fade, FadeIn, Move, MoveIn, MoveOut, Sticky, StickyIn, ZoomIn } from \"react-scroll-motion\";\r\nimport MountEverest from '../images/mount-everest.jpg'\r\nimport Swipe from 'react-easy-swipe'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nfunction Mountains() {\r\n\r\n    const [linkClicked, setLinkClicked] = useState('page1')\r\n\r\n    const isMobile = useMediaQuery({\r\n        query: '(min-width: 800px)'\r\n    })\r\n\r\n    function handleSwipe(to) {\r\n        scroller.scrollTo(to, {\r\n            spy: true,\r\n            smooth: true,\r\n            duration: 500,\r\n        })\r\n    }\r\n\r\n    function handleClick(name) {\r\n        setLinkClicked(name)\r\n    }\r\n\r\n    const dot1 = {\r\n        marginTop: '15px',\r\n        backgroundColor: '#8a8a8a'\r\n    }\r\n\r\n    const dot2 = {\r\n        marginTop: '60px',\r\n        backgroundColor: 'yellow',\r\n    }\r\n\r\n    const dot3 = {\r\n        marginTop: '105px',\r\n        backgroundColor: 'black'\r\n    }\r\n\r\n    const link1 = {\r\n        color: '#8a8a8a',\r\n    }\r\n\r\n    const link2 = {\r\n        color: 'yellow',\r\n    }\r\n\r\n    const link3 = {\r\n        color: 'black',\r\n    }\r\n\r\n    function styleDot() {\r\n        if (linkClicked === 'page1') {\r\n            return dot1\r\n        } else if (linkClicked === 'page2') {\r\n            return dot2\r\n        } else if (linkClicked === 'page3') {\r\n            return dot3\r\n        }\r\n    }\r\n\r\n    function styleLink() {\r\n        if (linkClicked === 'page1') {\r\n            return link1\r\n        } else if (linkClicked === 'page2') {\r\n            return link2\r\n        } else if (linkClicked === 'page3') {\r\n            return link3\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ScrollContainer>\r\n                {isMobile ? null : \r\n                <div className=\"swipe-help\">\r\n                    <p>Swipe to change pages</p>\r\n                </div>}\r\n                {isMobile ?\r\n                <div className=\"buttons-mountains\">\r\n                    <div style={styleDot()} className=\"dot\"></div>\r\n                    <p style={styleLink()} className=\"link-paragraph\"><Link onClick={() => handleClick('page1')} activeClass=\"active\" className=\"test1\" to=\"p1\" spy={true} smooth={true} duration={500} >What is mountain</Link></p>\r\n                    <p style={styleLink()} className=\"link-paragraph\"><Link onClick={() => handleClick('page2')} activeClass=\"active\" className=\"test2\" to=\"p2\" spy={true} smooth={true} duration={500} >Highest mountain</Link></p>\r\n                    <p style={styleLink()} className=\"link-paragraph\"><Link onClick={() => handleClick('page3')} activeClass=\"active\" className=\"test3\" to=\"p3\" spy={true} smooth={true} duration={500} >Mountains and humans</Link></p>\r\n                </div> : null}\r\n                <Swipe onSwipeDown={() => console.log('swipe down')} onSwipeUp={() => handleSwipe(\"p2\")}>\r\n                    <Element   className=\"mountains-element1\" name=\"p1\">\r\n                        <ScrollPage page={0}>\r\n                            <Animator animation={batch(Fade(), MoveOut(0, -500))}>\r\n                                <section className=\"mountains-content\">\r\n                                    <h1>What is mountain</h1>\r\n                                    <p>A mountain is an elevated portion of the Earth's crust, generally with steep sides that show significant exposed bedrock. A mountain differs from a plateau in having a limited summit area, and is larger than a hill, typically rising at least 300 metres (1000 feet) above the surrounding land. A few mountains are isolated summits, but most occur in mountain ranges.[1]\r\n                                    Mountains are formed through tectonic forces, erosion, or volcanism,[1] which act on time scales of up to tens of millions of years.[2] Once mountain building ceases, mountains are slowly leveled through the action of weathering, through slumping and other forms of mass wasting, and through erosion by rivers and glaciers. </p>\r\n                                </section>\r\n                            </Animator>\r\n                        </ScrollPage>\r\n                    </Element>\r\n                </Swipe>\r\n                <Swipe onSwipeDown={() => handleSwipe(\"p1\")} onSwipeUp={() => handleSwipe(\"p3\")}>\r\n                    <Element className=\"mountains-element2\" name=\"p2\">\r\n                        <ScrollPage page={1}>\r\n                            <Animator animation={batch(Fade(), MoveOut(0, -500))}>\r\n                                <section className=\"mountains-content\">\r\n                                    <h1>Highest Mountain</h1>\r\n                                    <p>The highest mountain on Earth is Mount Everest in the Himalayas of Asia, whose summit is 8,850 m (29,035 ft) above mean sea level. The highest known mountain on any planet in the Solar System is Olympus Mons on Mars at 21,171 m (69,459 ft). </p>\r\n                                </section>\r\n                            </Animator>\r\n                        </ScrollPage>\r\n                    </Element>\r\n                </Swipe>\r\n                <Swipe onSwipeDown={() => handleSwipe(\"p2\")}>\r\n                    <Element className=\"mountains-element3\" name=\"p3\">\r\n                        <ScrollPage page={2}>\r\n                            <Animator animation={batch(Fade(), MoveOut(0, -500))}>\r\n                                <section style={{background: 'none'}} className=\"mountains-content\">\r\n                                    <h1>Mountains and humans</h1>\r\n                                    <p>The highest known permanently tolerable altitude is at 5,950 metres (19,520 ft).[33] At very high altitudes, the decreasing atmospheric pressure means that less oxygen is available for breathing, and there is less protection against solar radiation (UV).[9] Above 8,000 metres (26,000 ft) elevation, there is not enough oxygen to support human life. This is known as the \"death zone\".[34] The summits of Mount Everest and K2 are in the death zone. </p>\r\n                                </section>\r\n                            </Animator>\r\n                        </ScrollPage>\r\n                    </Element>\r\n                </Swipe>\r\n            </ScrollContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Mountains","import React, { useState } from 'react';\r\nimport './styles/style.css'\r\nimport * as Scroll from 'react-scroll';\r\nimport { Element, Link } from 'react-scroll'\r\nimport EarthLogo from './images/earth-logo.png'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport Mountains from './components/Mountains'\r\n\r\nfunction App() {\r\n    const [linkClicked, setLinkClicked] = useState('dot1')\r\n\r\n    function handleClick(name) {\r\n        setLinkClicked(name)\r\n        console.log(name)\r\n    }\r\n\r\n    const dot1 = {\r\n        marginTop: '21px',\r\n    }\r\n    \r\n    const dot2 = {\r\n        marginTop: '62px'\r\n    }\r\n\r\n    const dot3 = {\r\n        marginTop: '102px',\r\n    }\r\n    \r\n\r\n    function getStyleDot() {\r\n        if (linkClicked === 'dot1') {\r\n            return dot1\r\n        } else if (linkClicked === 'dot2') {\r\n            return dot2\r\n        } else if (linkClicked === 'dot3') {\r\n            return dot3\r\n        }\r\n    }\r\n\r\n    function getStyleLink1(dotName) {\r\n        if (linkClicked === dotName) {\r\n            return 'link-clicked'\r\n        } else {\r\n            return 'link'\r\n        }\r\n    }\r\n\r\n    const colorPage1 = {color: 'rgb(95, 106, 250)', transition: '0.5s', borderBottom: '1px solid rgb(95, 106, 250)'}\r\n    const colorPage2 = {color: 'rgb(255, 136, 0)', transition: '0.5s', borderBottom: '1px solid rgb(255, 136, 0)'}\r\n    const colorPage3 = {color: 'rgb(68, 245, 83)', transition: '0.5s', borderBottom: '1px solid rgb(68, 245, 83)'}\r\n\r\n    function getStyleName() {\r\n        if (linkClicked === 'dot1') {\r\n            return colorPage1\r\n        } else if (linkClicked === 'dot2') {\r\n            return colorPage2\r\n        } else if (linkClicked === 'dot3') {\r\n            return colorPage3\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <section className=\"home-wrapper\">\r\n                            <div>\r\n                                <img className=\"earth-logo\" src={EarthLogo}/>\r\n                            </div>\r\n                            <div className=\"website-name\">\r\n                                <h1 style={getStyleName()}>Planet Earth</h1>\r\n                            </div>\r\n                            <div className=\"buttons\">\r\n                                <div style={getStyleDot()} className=\"dot\">\r\n                                </div>\r\n                                <p className={getStyleLink1('dot1')}><Link onClick={() => handleClick('dot1')} activeClass=\"active\" className=\"test1\" to=\"page1\" spy={true} smooth={true} duration={500} >Mountains</Link></p>\r\n                                <p className={getStyleLink1('dot2')}><Link onClick={() => handleClick('dot2')} activeClass=\"active\" className=\"test2\" to=\"page2\" spy={true} smooth={true} duration={500} >Canyons</Link></p>\r\n                                <p className={getStyleLink1('dot3')}><Link onClick={() => handleClick('dot3')} activeClass=\"active\" className=\"test3\" to=\"page3\" spy={true} smooth={true} duration={500} >Nature</Link></p>\r\n                            </div>\r\n                            <Element name=\"page1\" className=\"element1\">\r\n                                <div className=\"page1-content\">\r\n                                    <h2>Mountains</h2>\r\n                                    <p>Sed ac orci id ante varius tristique. Donec eleifend tortor ac quam dignissim, sed ultricies massa tristique.</p>\r\n                                    <div className=\"button-container\">\r\n                                        <a href=\"/Mountains\"><button className=\"btn-read-white\">Read more</button></a>\r\n                                    </div>\r\n                                </div>\r\n                            </Element>\r\n                            <Element name=\"page2\" className=\"element2\">\r\n                                <div className=\"page2-content\">\r\n                                    <h2>Canyons</h2>\r\n                                    <p>Donec elit nisl, luctus a neque tempus, laoreet ultrices urna. Quisque non lacus vitae neque semper venenatis.</p>\r\n                                    <div className=\"button-container\">\r\n                                        <button className=\"btn-read-white\">Read more</button>\r\n                                    </div>\r\n                                </div>\r\n                            </Element>\r\n\r\n                            <Element name=\"page3\" className=\"element3\">\r\n                                <div className=\"page3-content\">\r\n                                    <h2>Nature</h2>\r\n                                    <p>Donec tempor augue vel sem ultricies, in viverra mi pretium. Nulla accumsan massa id lectus maximus, vitae varius turpis gravida.</p>\r\n                                    <div className=\"button-container\">\r\n                                        <button className=\"btn-read-white\">Read more</button>\r\n                                    </div>\r\n                                </div>\r\n                            </Element>\r\n                            <footer>\r\n                                <div className=\"footer-wrapper\">\r\n                                    <p>Made by Artluevil</p>\r\n                                </div>\r\n                            </footer>\r\n                        </section>\r\n                    </Route>\r\n                    <Route exact path=\"/Mountains\">\r\n                        <Mountains getStyleDot={getStyleDot} handleClick={handleClick}/>\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}